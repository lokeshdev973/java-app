pipeline {
    agent {
        docker {
            image 'node:18-alpine'  // Use the official Node.js image
            args '-p 3000:3000 -v /var/run/docker.sock:/var/run/docker.sock'    // Expose port 3000 and mount Docker socket
        }
    }

    environment {
        GIT_REPO = 'https://github.com/verma-kunal/AWS-Session.git'
    }

    stages {
        stage('Install Docker CLI') {
            steps {
                sh '''
                    apk update
                    apk add docker-cli
                '''
            }
        }

        stage('Verify Docker Installation') {
            steps {
                sh 'docker --version'
            }
        }

        stage('Clone Repository') {
            steps {
                git branch: 'main', url: "${env.GIT_REPO}"
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build('nodejs-app', '.')
                }
            }
        }

        stage('Run Application') {
            steps {
                sh 'npm install'
                sh 'npm run start'
            }
        }
    }

    post {
        always {
            // Clean up
            script {
                sh '''
                    docker ps -q --filter "ancestor=nodejs-app" | xargs -r docker stop
                    docker ps -a -q --filter "ancestor=nodejs-app" | xargs -r docker rm
                '''
            }
        }
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
